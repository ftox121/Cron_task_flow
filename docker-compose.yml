version: '3.8'

services:
  django:
    build: .
    container_name: django-2
    command: sh -c "cd /task_flow && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./task_flow:/task_flow
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14
    container_name: task_flow-db-2
    restart: always
    environment:
      POSTGRES_DB: tasks_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Nbveh1775
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: task_flow-rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: .
    container_name: task_flow-celery
    command: celery -A task_flow worker --loglevel=info
    volumes:
      - ./task_flow:/task_flow
    depends_on:
      - django
      - rabbitmq
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://

  celery-beat:
    build: .
    container_name: task_flow-celery-beat
    command: celery -A task_flow beat --loglevel=info
    volumes:
      - ./task_flow:/task_flow
    depends_on:
      - django
      - rabbitmq
      - celery
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
